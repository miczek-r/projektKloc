name: sonarqube-check
on:
  push:
    branches:
      - develop
    workflow_dispatch:
jobs:
  sonarqube-check:
    runs-on: ubuntu-latest
    container: unityci/editor:ubuntu-2020.3.17f1-base-0
    env:
      DOTNET_ROOT: '/opt/unity/Editor/Data/NetCore/Sdk-2.2.107'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install JDK 11 for SonarScanner .NET
        run: apt update && apt install -y openjdk-11-jre-headless=11.0.11+9-0ubuntu2~18.04
      - name: Install SonarScanner .NET
        run: $DOTNET_ROOT/dotnet tool install dotnet-sonarscanner --tool-path ../sonarscanner --version 5.3.1
      - name: Cache Library
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-2020.3.17
      - name: Activate unity and generate solution file
        continue-on-error: true
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        run: |
          # first line is needed because doesn't do everything the first time...
          unity-editor -username $UNITY_EMAIL -password $UNITY_PASSWORD -serial $UNITY_SERIAL -nographics -batchmode -logFile /dev/stdout -projectPath . -executeMethod UnityEditor.SyncVS.SyncSolution -quit
          unity-editor -username $UNITY_EMAIL -password $UNITY_PASSWORD -serial $UNITY_SERIAL -nographics -batchmode -logFile /dev/stdout -projectPath . -executeMethod UnityEditor.SyncVS.SyncSolution -quit
      - name: Build and scan project
        env:
          FrameworkPathOverride: '/opt/unity/Editor/Data/MonoBleedingEdge/bin'
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          ../sonarscanner/dotnet-sonarscanner begin /k:"<your_project_key>" /d:sonar.login="$SONAR_TOKEN" /d:sonar.host.url="$SONAR_HOST_URL"
          $DOTNET_ROOT/dotnet build <your_project_name>.sln
          ../sonarscanner/dotnet-sonarscanner end /d:sonar.login="$SONAR_TOKEN"
